/*
 * Landelijke tabellen
 *
 * API voor het ontsluiten van landelijke tabellen die op de website van BZK worden gepubliceerd.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// TabelCollectie
    /// </summary>
    [DataContract]
    public partial class TabelCollectie :  IEquatable<TabelCollectie>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TabelCollectie" /> class.
        /// </summary>
        /// <param name="tabellen">tabellen.</param>
        public TabelCollectie(List<Tabel> tabellen = default(List<Tabel>))
        {
            this.Tabellen = tabellen;
        }

        /// <summary>
        /// Gets or Sets Tabellen
        /// </summary>
        [DataMember(Name="tabellen", EmitDefaultValue=false)]
        public List<Tabel> Tabellen { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TabelCollectie {\n");
            sb.Append("  Tabellen: ").Append(Tabellen).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TabelCollectie);
        }

        /// <summary>
        /// Returns true if TabelCollectie instances are equal
        /// </summary>
        /// <param name="input">Instance of TabelCollectie to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TabelCollectie input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Tabellen == input.Tabellen ||
                    this.Tabellen != null &&
                    input.Tabellen != null &&
                    this.Tabellen.SequenceEqual(input.Tabellen)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Tabellen != null)
                    hashCode = hashCode * 59 + this.Tabellen.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
