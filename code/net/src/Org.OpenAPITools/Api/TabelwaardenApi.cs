/*
 * Landelijke tabellen
 *
 * API voor het ontsluiten van landelijke tabellen die op de website van BZK worden gepubliceerd.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Threading;
using RestSharp;
using Org.OpenAPITools.Client;
using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Api
{
    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface ITabelwaardenApi : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Het ophalen van de gegevens van een enkele waarde uit een landelijke tabel.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tabelidentificatie">De identificatie van een landelijke tabel.</param>
        /// <param name="code">De code, behorende bij de tabelwaarde.</param>
        /// <returns>Waarde</returns>
        Waarde GetWaarde (string tabelidentificatie, string code);

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Het ophalen van de gegevens van een enkele waarde uit een landelijke tabel.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tabelidentificatie">De identificatie van een landelijke tabel.</param>
        /// <param name="code">De code, behorende bij de tabelwaarde.</param>
        /// <returns>ApiResponse of Waarde</returns>
        ApiResponse<Waarde> GetWaardeWithHttpInfo (string tabelidentificatie, string code);
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Het ophalen van de tabelwaarden van een landelijke tabel.&lt;br&gt;Als er op omschrijving of code gezocht wordt worden alleen actuele waarden geretourneerd. &lt;br&gt; Als de parameter &lt;b&gt; inclusief beeindigd &lt;/b&gt; met waarde &lt;i&gt; true &lt;/i&gt;  wordt meegegeven bij de call worden ook beeindigde waarden geretourneerd.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tabelidentificatie">De identificatie van een landelijke tabel.</param>
        /// <param name="code">De code, behorende bij de tabelwaarde. (optional)</param>
        /// <param name="omschrijving">De omschrijving van de tabelwaarde. &lt;br&gt; Bij het zoeken mag er gebruik worden gemaakt van &lt;b&gt;[wildcards](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/master/features/wildcard.feature)&lt;/b&gt;. &lt;br&gt;Zoeken is &lt;b&gt;[case-Insensitive](https://github.com/VNG-Realisatie/Bevragingen-ingeschreven-personen/blob/master/features/case_insensitive.feature)&lt;/b&gt;&lt;/a&gt; (optional)</param>
        /// <param name="inclusiefbeeindigd">De indicatie waarmee aangegeven wordt of beëindigde waarden moeten worden meegeleverd. Default worden alleen actuele tabelwaarden geretourneerd. Wanneer deze wordt opgenomen met de waarde true, dan worden ook beëindigde tabelwaarden meegeleverd. (optional)</param>
        /// <returns>WaardeCollectie</returns>
        WaardeCollectie GetWaarden (string tabelidentificatie, string code = default(string), string omschrijving = default(string), bool? inclusiefbeeindigd = default(bool?));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Het ophalen van de tabelwaarden van een landelijke tabel.&lt;br&gt;Als er op omschrijving of code gezocht wordt worden alleen actuele waarden geretourneerd. &lt;br&gt; Als de parameter &lt;b&gt; inclusief beeindigd &lt;/b&gt; met waarde &lt;i&gt; true &lt;/i&gt;  wordt meegegeven bij de call worden ook beeindigde waarden geretourneerd.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tabelidentificatie">De identificatie van een landelijke tabel.</param>
        /// <param name="code">De code, behorende bij de tabelwaarde. (optional)</param>
        /// <param name="omschrijving">De omschrijving van de tabelwaarde. &lt;br&gt; Bij het zoeken mag er gebruik worden gemaakt van &lt;b&gt;[wildcards](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/master/features/wildcard.feature)&lt;/b&gt;. &lt;br&gt;Zoeken is &lt;b&gt;[case-Insensitive](https://github.com/VNG-Realisatie/Bevragingen-ingeschreven-personen/blob/master/features/case_insensitive.feature)&lt;/b&gt;&lt;/a&gt; (optional)</param>
        /// <param name="inclusiefbeeindigd">De indicatie waarmee aangegeven wordt of beëindigde waarden moeten worden meegeleverd. Default worden alleen actuele tabelwaarden geretourneerd. Wanneer deze wordt opgenomen met de waarde true, dan worden ook beëindigde tabelwaarden meegeleverd. (optional)</param>
        /// <returns>ApiResponse of WaardeCollectie</returns>
        ApiResponse<WaardeCollectie> GetWaardenWithHttpInfo (string tabelidentificatie, string code = default(string), string omschrijving = default(string), bool? inclusiefbeeindigd = default(bool?));
        #endregion Synchronous Operations
        #region Asynchronous Operations
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Het ophalen van de gegevens van een enkele waarde uit een landelijke tabel.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tabelidentificatie">De identificatie van een landelijke tabel.</param>
        /// <param name="code">De code, behorende bij de tabelwaarde.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
        /// <returns>Task of Waarde</returns>
        System.Threading.Tasks.Task<Waarde> GetWaardeAsync (string tabelidentificatie, string code, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Het ophalen van de gegevens van een enkele waarde uit een landelijke tabel.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tabelidentificatie">De identificatie van een landelijke tabel.</param>
        /// <param name="code">De code, behorende bij de tabelwaarde.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
        /// <returns>Task of ApiResponse (Waarde)</returns>
        System.Threading.Tasks.Task<ApiResponse<Waarde>> GetWaardeWithHttpInfoAsync (string tabelidentificatie, string code, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Het ophalen van de tabelwaarden van een landelijke tabel.&lt;br&gt;Als er op omschrijving of code gezocht wordt worden alleen actuele waarden geretourneerd. &lt;br&gt; Als de parameter &lt;b&gt; inclusief beeindigd &lt;/b&gt; met waarde &lt;i&gt; true &lt;/i&gt;  wordt meegegeven bij de call worden ook beeindigde waarden geretourneerd.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tabelidentificatie">De identificatie van een landelijke tabel.</param>
        /// <param name="code">De code, behorende bij de tabelwaarde. (optional)</param>
        /// <param name="omschrijving">De omschrijving van de tabelwaarde. &lt;br&gt; Bij het zoeken mag er gebruik worden gemaakt van &lt;b&gt;[wildcards](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/master/features/wildcard.feature)&lt;/b&gt;. &lt;br&gt;Zoeken is &lt;b&gt;[case-Insensitive](https://github.com/VNG-Realisatie/Bevragingen-ingeschreven-personen/blob/master/features/case_insensitive.feature)&lt;/b&gt;&lt;/a&gt; (optional)</param>
        /// <param name="inclusiefbeeindigd">De indicatie waarmee aangegeven wordt of beëindigde waarden moeten worden meegeleverd. Default worden alleen actuele tabelwaarden geretourneerd. Wanneer deze wordt opgenomen met de waarde true, dan worden ook beëindigde tabelwaarden meegeleverd. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
        /// <returns>Task of WaardeCollectie</returns>
        System.Threading.Tasks.Task<WaardeCollectie> GetWaardenAsync (string tabelidentificatie, string code = default(string), string omschrijving = default(string), bool? inclusiefbeeindigd = default(bool?), CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Het ophalen van de tabelwaarden van een landelijke tabel.&lt;br&gt;Als er op omschrijving of code gezocht wordt worden alleen actuele waarden geretourneerd. &lt;br&gt; Als de parameter &lt;b&gt; inclusief beeindigd &lt;/b&gt; met waarde &lt;i&gt; true &lt;/i&gt;  wordt meegegeven bij de call worden ook beeindigde waarden geretourneerd.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tabelidentificatie">De identificatie van een landelijke tabel.</param>
        /// <param name="code">De code, behorende bij de tabelwaarde. (optional)</param>
        /// <param name="omschrijving">De omschrijving van de tabelwaarde. &lt;br&gt; Bij het zoeken mag er gebruik worden gemaakt van &lt;b&gt;[wildcards](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/master/features/wildcard.feature)&lt;/b&gt;. &lt;br&gt;Zoeken is &lt;b&gt;[case-Insensitive](https://github.com/VNG-Realisatie/Bevragingen-ingeschreven-personen/blob/master/features/case_insensitive.feature)&lt;/b&gt;&lt;/a&gt; (optional)</param>
        /// <param name="inclusiefbeeindigd">De indicatie waarmee aangegeven wordt of beëindigde waarden moeten worden meegeleverd. Default worden alleen actuele tabelwaarden geretourneerd. Wanneer deze wordt opgenomen met de waarde true, dan worden ook beëindigde tabelwaarden meegeleverd. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
        /// <returns>Task of ApiResponse (WaardeCollectie)</returns>
        System.Threading.Tasks.Task<ApiResponse<WaardeCollectie>> GetWaardenWithHttpInfoAsync (string tabelidentificatie, string code = default(string), string omschrijving = default(string), bool? inclusiefbeeindigd = default(bool?), CancellationToken cancellationToken = default(CancellationToken));
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class TabelwaardenApi : ITabelwaardenApi
    {
        private Org.OpenAPITools.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="TabelwaardenApi"/> class.
        /// </summary>
        /// <returns></returns>
        public TabelwaardenApi(String basePath)
        {
            this.Configuration = new Org.OpenAPITools.Client.Configuration { BasePath = basePath };

            ExceptionFactory = Org.OpenAPITools.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="TabelwaardenApi"/> class
        /// </summary>
        /// <returns></returns>
        public TabelwaardenApi()
        {
            this.Configuration = Org.OpenAPITools.Client.Configuration.Default;

            ExceptionFactory = Org.OpenAPITools.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="TabelwaardenApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public TabelwaardenApi(Org.OpenAPITools.Client.Configuration configuration = null)
        {
            if (configuration == null) // use the default one in Configuration
                this.Configuration = Org.OpenAPITools.Client.Configuration.Default;
            else
                this.Configuration = configuration;

            ExceptionFactory = Org.OpenAPITools.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public String GetBasePath()
        {
            return this.Configuration.ApiClient.RestClient.BaseUrl.ToString();
        }

        /// <summary>
        /// Sets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        [Obsolete("SetBasePath is deprecated, please do 'Configuration.ApiClient = new ApiClient(\"http://new-path\")' instead.")]
        public void SetBasePath(String basePath)
        {
            // do nothing
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public Org.OpenAPITools.Client.Configuration Configuration {get; set;}

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public Org.OpenAPITools.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// Gets the default header.
        /// </summary>
        /// <returns>Dictionary of HTTP header</returns>
        [Obsolete("DefaultHeader is deprecated, please use Configuration.DefaultHeader instead.")]
        public IDictionary<String, String> DefaultHeader()
        {
            return new ReadOnlyDictionary<string, string>(this.Configuration.DefaultHeader);
        }

        /// <summary>
        /// Add default header.
        /// </summary>
        /// <param name="key">Header field name.</param>
        /// <param name="value">Header field value.</param>
        /// <returns></returns>
        [Obsolete("AddDefaultHeader is deprecated, please use Configuration.AddDefaultHeader instead.")]
        public void AddDefaultHeader(string key, string value)
        {
            this.Configuration.AddDefaultHeader(key, value);
        }

        /// <summary>
        ///  Het ophalen van de gegevens van een enkele waarde uit een landelijke tabel.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tabelidentificatie">De identificatie van een landelijke tabel.</param>
        /// <param name="code">De code, behorende bij de tabelwaarde.</param>
        /// <returns>Waarde</returns>
        public Waarde GetWaarde (string tabelidentificatie, string code)
        {
             ApiResponse<Waarde> localVarResponse = GetWaardeWithHttpInfo(tabelidentificatie, code);
             return localVarResponse.Data;
        }

        /// <summary>
        ///  Het ophalen van de gegevens van een enkele waarde uit een landelijke tabel.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tabelidentificatie">De identificatie van een landelijke tabel.</param>
        /// <param name="code">De code, behorende bij de tabelwaarde.</param>
        /// <returns>ApiResponse of Waarde</returns>
        public ApiResponse<Waarde> GetWaardeWithHttpInfo (string tabelidentificatie, string code)
        {
            // verify the required parameter 'tabelidentificatie' is set
            if (tabelidentificatie == null)
                throw new ApiException(400, "Missing required parameter 'tabelidentificatie' when calling TabelwaardenApi->GetWaarde");
            // verify the required parameter 'code' is set
            if (code == null)
                throw new ApiException(400, "Missing required parameter 'code' when calling TabelwaardenApi->GetWaarde");

            var localVarPath = "/tabellen/{tabelidentificatie}/waarden/{code}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json",
                "application/problem+json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (tabelidentificatie != null) localVarPathParams.Add("tabelidentificatie", this.Configuration.ApiClient.ParameterToString(tabelidentificatie)); // path parameter
            if (code != null) localVarPathParams.Add("code", this.Configuration.ApiClient.ParameterToString(code)); // path parameter


            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("GetWaarde", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Waarde>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (Waarde) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(Waarde)));
        }

        /// <summary>
        ///  Het ophalen van de gegevens van een enkele waarde uit een landelijke tabel.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tabelidentificatie">De identificatie van een landelijke tabel.</param>
        /// <param name="code">De code, behorende bij de tabelwaarde.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
        /// <returns>Task of Waarde</returns>
        public async System.Threading.Tasks.Task<Waarde> GetWaardeAsync (string tabelidentificatie, string code, CancellationToken cancellationToken = default(CancellationToken))
        {
             ApiResponse<Waarde> localVarResponse = await GetWaardeWithHttpInfoAsync(tabelidentificatie, code, cancellationToken);
             return localVarResponse.Data;

        }

        /// <summary>
        ///  Het ophalen van de gegevens van een enkele waarde uit een landelijke tabel.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tabelidentificatie">De identificatie van een landelijke tabel.</param>
        /// <param name="code">De code, behorende bij de tabelwaarde.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
        /// <returns>Task of ApiResponse (Waarde)</returns>
        public async System.Threading.Tasks.Task<ApiResponse<Waarde>> GetWaardeWithHttpInfoAsync (string tabelidentificatie, string code, CancellationToken cancellationToken = default(CancellationToken))
        {
            // verify the required parameter 'tabelidentificatie' is set
            if (tabelidentificatie == null)
                throw new ApiException(400, "Missing required parameter 'tabelidentificatie' when calling TabelwaardenApi->GetWaarde");
            // verify the required parameter 'code' is set
            if (code == null)
                throw new ApiException(400, "Missing required parameter 'code' when calling TabelwaardenApi->GetWaarde");

            var localVarPath = "/tabellen/{tabelidentificatie}/waarden/{code}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json",
                "application/problem+json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (tabelidentificatie != null) localVarPathParams.Add("tabelidentificatie", this.Configuration.ApiClient.ParameterToString(tabelidentificatie)); // path parameter
            if (code != null) localVarPathParams.Add("code", this.Configuration.ApiClient.ParameterToString(code)); // path parameter


            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await this.Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType, cancellationToken);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("GetWaarde", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Waarde>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (Waarde) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(Waarde)));
        }

        /// <summary>
        ///  Het ophalen van de tabelwaarden van een landelijke tabel.&lt;br&gt;Als er op omschrijving of code gezocht wordt worden alleen actuele waarden geretourneerd. &lt;br&gt; Als de parameter &lt;b&gt; inclusief beeindigd &lt;/b&gt; met waarde &lt;i&gt; true &lt;/i&gt;  wordt meegegeven bij de call worden ook beeindigde waarden geretourneerd.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tabelidentificatie">De identificatie van een landelijke tabel.</param>
        /// <param name="code">De code, behorende bij de tabelwaarde. (optional)</param>
        /// <param name="omschrijving">De omschrijving van de tabelwaarde. &lt;br&gt; Bij het zoeken mag er gebruik worden gemaakt van &lt;b&gt;[wildcards](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/master/features/wildcard.feature)&lt;/b&gt;. &lt;br&gt;Zoeken is &lt;b&gt;[case-Insensitive](https://github.com/VNG-Realisatie/Bevragingen-ingeschreven-personen/blob/master/features/case_insensitive.feature)&lt;/b&gt;&lt;/a&gt; (optional)</param>
        /// <param name="inclusiefbeeindigd">De indicatie waarmee aangegeven wordt of beëindigde waarden moeten worden meegeleverd. Default worden alleen actuele tabelwaarden geretourneerd. Wanneer deze wordt opgenomen met de waarde true, dan worden ook beëindigde tabelwaarden meegeleverd. (optional)</param>
        /// <returns>WaardeCollectie</returns>
        public WaardeCollectie GetWaarden (string tabelidentificatie, string code = default(string), string omschrijving = default(string), bool? inclusiefbeeindigd = default(bool?))
        {
             ApiResponse<WaardeCollectie> localVarResponse = GetWaardenWithHttpInfo(tabelidentificatie, code, omschrijving, inclusiefbeeindigd);
             return localVarResponse.Data;
        }

        /// <summary>
        ///  Het ophalen van de tabelwaarden van een landelijke tabel.&lt;br&gt;Als er op omschrijving of code gezocht wordt worden alleen actuele waarden geretourneerd. &lt;br&gt; Als de parameter &lt;b&gt; inclusief beeindigd &lt;/b&gt; met waarde &lt;i&gt; true &lt;/i&gt;  wordt meegegeven bij de call worden ook beeindigde waarden geretourneerd.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tabelidentificatie">De identificatie van een landelijke tabel.</param>
        /// <param name="code">De code, behorende bij de tabelwaarde. (optional)</param>
        /// <param name="omschrijving">De omschrijving van de tabelwaarde. &lt;br&gt; Bij het zoeken mag er gebruik worden gemaakt van &lt;b&gt;[wildcards](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/master/features/wildcard.feature)&lt;/b&gt;. &lt;br&gt;Zoeken is &lt;b&gt;[case-Insensitive](https://github.com/VNG-Realisatie/Bevragingen-ingeschreven-personen/blob/master/features/case_insensitive.feature)&lt;/b&gt;&lt;/a&gt; (optional)</param>
        /// <param name="inclusiefbeeindigd">De indicatie waarmee aangegeven wordt of beëindigde waarden moeten worden meegeleverd. Default worden alleen actuele tabelwaarden geretourneerd. Wanneer deze wordt opgenomen met de waarde true, dan worden ook beëindigde tabelwaarden meegeleverd. (optional)</param>
        /// <returns>ApiResponse of WaardeCollectie</returns>
        public ApiResponse<WaardeCollectie> GetWaardenWithHttpInfo (string tabelidentificatie, string code = default(string), string omschrijving = default(string), bool? inclusiefbeeindigd = default(bool?))
        {
            // verify the required parameter 'tabelidentificatie' is set
            if (tabelidentificatie == null)
                throw new ApiException(400, "Missing required parameter 'tabelidentificatie' when calling TabelwaardenApi->GetWaarden");

            var localVarPath = "/tabellen/{tabelidentificatie}/waarden";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json",
                "application/problem+json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (tabelidentificatie != null) localVarPathParams.Add("tabelidentificatie", this.Configuration.ApiClient.ParameterToString(tabelidentificatie)); // path parameter
            if (code != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "code", code)); // query parameter
            if (omschrijving != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "omschrijving", omschrijving)); // query parameter
            if (inclusiefbeeindigd != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "inclusiefbeeindigd", inclusiefbeeindigd)); // query parameter


            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("GetWaarden", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<WaardeCollectie>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (WaardeCollectie) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(WaardeCollectie)));
        }

        /// <summary>
        ///  Het ophalen van de tabelwaarden van een landelijke tabel.&lt;br&gt;Als er op omschrijving of code gezocht wordt worden alleen actuele waarden geretourneerd. &lt;br&gt; Als de parameter &lt;b&gt; inclusief beeindigd &lt;/b&gt; met waarde &lt;i&gt; true &lt;/i&gt;  wordt meegegeven bij de call worden ook beeindigde waarden geretourneerd.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tabelidentificatie">De identificatie van een landelijke tabel.</param>
        /// <param name="code">De code, behorende bij de tabelwaarde. (optional)</param>
        /// <param name="omschrijving">De omschrijving van de tabelwaarde. &lt;br&gt; Bij het zoeken mag er gebruik worden gemaakt van &lt;b&gt;[wildcards](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/master/features/wildcard.feature)&lt;/b&gt;. &lt;br&gt;Zoeken is &lt;b&gt;[case-Insensitive](https://github.com/VNG-Realisatie/Bevragingen-ingeschreven-personen/blob/master/features/case_insensitive.feature)&lt;/b&gt;&lt;/a&gt; (optional)</param>
        /// <param name="inclusiefbeeindigd">De indicatie waarmee aangegeven wordt of beëindigde waarden moeten worden meegeleverd. Default worden alleen actuele tabelwaarden geretourneerd. Wanneer deze wordt opgenomen met de waarde true, dan worden ook beëindigde tabelwaarden meegeleverd. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
        /// <returns>Task of WaardeCollectie</returns>
        public async System.Threading.Tasks.Task<WaardeCollectie> GetWaardenAsync (string tabelidentificatie, string code = default(string), string omschrijving = default(string), bool? inclusiefbeeindigd = default(bool?), CancellationToken cancellationToken = default(CancellationToken))
        {
             ApiResponse<WaardeCollectie> localVarResponse = await GetWaardenWithHttpInfoAsync(tabelidentificatie, code, omschrijving, inclusiefbeeindigd, cancellationToken);
             return localVarResponse.Data;

        }

        /// <summary>
        ///  Het ophalen van de tabelwaarden van een landelijke tabel.&lt;br&gt;Als er op omschrijving of code gezocht wordt worden alleen actuele waarden geretourneerd. &lt;br&gt; Als de parameter &lt;b&gt; inclusief beeindigd &lt;/b&gt; met waarde &lt;i&gt; true &lt;/i&gt;  wordt meegegeven bij de call worden ook beeindigde waarden geretourneerd.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tabelidentificatie">De identificatie van een landelijke tabel.</param>
        /// <param name="code">De code, behorende bij de tabelwaarde. (optional)</param>
        /// <param name="omschrijving">De omschrijving van de tabelwaarde. &lt;br&gt; Bij het zoeken mag er gebruik worden gemaakt van &lt;b&gt;[wildcards](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/master/features/wildcard.feature)&lt;/b&gt;. &lt;br&gt;Zoeken is &lt;b&gt;[case-Insensitive](https://github.com/VNG-Realisatie/Bevragingen-ingeschreven-personen/blob/master/features/case_insensitive.feature)&lt;/b&gt;&lt;/a&gt; (optional)</param>
        /// <param name="inclusiefbeeindigd">De indicatie waarmee aangegeven wordt of beëindigde waarden moeten worden meegeleverd. Default worden alleen actuele tabelwaarden geretourneerd. Wanneer deze wordt opgenomen met de waarde true, dan worden ook beëindigde tabelwaarden meegeleverd. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
        /// <returns>Task of ApiResponse (WaardeCollectie)</returns>
        public async System.Threading.Tasks.Task<ApiResponse<WaardeCollectie>> GetWaardenWithHttpInfoAsync (string tabelidentificatie, string code = default(string), string omschrijving = default(string), bool? inclusiefbeeindigd = default(bool?), CancellationToken cancellationToken = default(CancellationToken))
        {
            // verify the required parameter 'tabelidentificatie' is set
            if (tabelidentificatie == null)
                throw new ApiException(400, "Missing required parameter 'tabelidentificatie' when calling TabelwaardenApi->GetWaarden");

            var localVarPath = "/tabellen/{tabelidentificatie}/waarden";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json",
                "application/problem+json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (tabelidentificatie != null) localVarPathParams.Add("tabelidentificatie", this.Configuration.ApiClient.ParameterToString(tabelidentificatie)); // path parameter
            if (code != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "code", code)); // query parameter
            if (omschrijving != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "omschrijving", omschrijving)); // query parameter
            if (inclusiefbeeindigd != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "inclusiefbeeindigd", inclusiefbeeindigd)); // query parameter


            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await this.Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType, cancellationToken);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("GetWaarden", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<WaardeCollectie>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (WaardeCollectie) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(WaardeCollectie)));
        }

    }
}
